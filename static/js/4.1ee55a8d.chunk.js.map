{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/Profile_user_info/ProfileStatus.js","components/Profile/Profile_user_info/ProfileStatusWithHooks.js","components/Profile/Profile_user_info/Profile_user_info.js","components/Profile/Posts/Post/Post.js","components/Profile/Posts/Posts.js","components/Profile/Posts/PostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","ProfileStatusWithHooks","useState","editMode","setEditMode","userStatus","setUserStatus","useEffect","Fragment","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateUserStatus","Profile_user_info","profile","src","photos","large","alt","className","s","info","Preloader","Post","message","maxLength10","maxLengthCreator","Posts","memo","posts","reverse","map","post","create_post","AddPostFormRedux","onSubmit","values","addNewPost","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","PostsContainer","posts_from_server","dispatch","newPost","addPostActionCreator","Profile","store","ProfileContainer","userId","match","params","authorizedUserId","history","push","getProfile","getUserStatus","compose","withRouter"],"mappings":"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","file":"static/js/4.1ee55a8d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirect = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirect\r\n}","import React, {Component} from \"react\";\r\n\r\n// import Preloader from \"../../common/Preloader\";\r\n\r\n\r\nclass ProfileStatus extends Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.userStatus\r\n    }\r\n    activateMode = () => {\r\n        this.setState(\r\n            {\r\n                editMode: true\r\n            }\r\n        )\r\n    }\r\n\r\n    deactivateMode = () => {\r\n        this.setState(\r\n            {\r\n                editMode: false\r\n            }\r\n        )\r\n        this.props.updateUserStatus(this.state.status)\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.userStatus !== this.props.userStatus) {\r\n            this.setState({\r\n                status: this.props.userStatus\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                  <span onDoubleClick={this.activateMode}>\r\n                      {this.props.userStatus || 'status is absent'}\r\n                  </span>\r\n                </div>}\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateMode} value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from \"react\";\r\n// import Preloader from \"../../common/Preloader\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [userStatus, setUserStatus] = useState(props.userStatus)\r\n    useEffect(() => {\r\n        setUserStatus(props.userStatus)\r\n\r\n    }, [props.userStatus])\r\n    const activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(userStatus)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setUserStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {!editMode &&\r\n            <div>\r\n                  <span onDoubleClick={activateMode}>\r\n                      {props.userStatus || 'status is absent'}\r\n                  </span>\r\n            </div>}\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateMode} value={userStatus}/>\r\n            </div>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React, {Component} from \"react\";\r\nimport s from \"./Profile_user_info.module.css\";\r\nimport Preloader from \"../../common/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nclass Profile_user_info extends Component{\r\n\r\n    render () {\r\n        if (!this.props.profile) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <img src={this.props.profile.photos.large} alt=\"avatar\"/>\r\n                <div className={s.info}>\r\n                    name:\r\n                    age:\r\n                </div>\r\n                {/*<ProfileStatus userStatus={this.props.userStatus} updateUserStatus={this.props.updateUserStatus}/>*/}\r\n                <ProfileStatusWithHooks userStatus={this.props.userStatus} updateUserStatus={this.props.updateUserStatus}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Profile_user_info;","import React, {Component} from \"react\"\r\nimport s from './Post.module.css'\r\n\r\nclass Post extends Component{\r\n    render () {\r\n        return (\r\n            <div className={s}>\r\n                <img src=\"\" alt=\"\"/>\r\n                {this.props.message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Post","import React from \"react\"\r\nimport s from './Posts.module.css'\r\nimport Post from './Post/Post'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utilities/validators/validators\";\r\nimport {Textarea} from \"../../../utilities/FormsControl/FormsControl\";\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst Posts = React.memo(props => {\r\n\r\n    // new_post = React.createRef();\r\n    // onPostChange = () => {\r\n    //     let new_post_body = this.new_post.current.value;\r\n    //     this.props.onPostChange(new_post_body);\r\n    //     console.log(this.props)\r\n    // };\r\n    let create_post = (values) => {\r\n        props.create_post(values.addNewPost)\r\n    };\r\n    // shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n    //     return nextProps !== this.props || nextState !== this.state\r\n    // } or import PureComponent from React if a component is a class\r\n\r\n        let posts = [...props.posts].reverse().map(post => <Post message={post.post}/>);\r\n        return (\r\n            <React.Fragment>\r\n                <div className={s.create_post}>\r\n                    <p>Create a post</p>\r\n                    <AddPostFormRedux onSubmit={create_post}/>\r\n                </div>\r\n                <div className={s}>\r\n                    {posts}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    })\r\nconst AddPostFrom = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field component={Textarea} name=\"addNewPost\" validate={[required, maxLength10]} placeholder=\"Enter post's text\"/>\r\n        <button>create post</button>\r\n    </form>\r\n}\r\nconst AddPostFormRedux = reduxForm ({form: \"addPost\"})(AddPostFrom)\r\nexport default Posts","import Posts from \"./Posts\";\r\nimport {connect} from \"react-redux\";\r\nimport {addPostActionCreator} from \"../../../Redux/Reducers/profile-reducer\";\r\n\r\n// class PostsContainer extends Component {\r\n//     state = this.props.store.getState();\r\n//     onPostChange = (new_post_body) => {\r\n//         let action = userTextPostWriteActionCreator(new_post_body);\r\n//         this.props.store.dispatch(action);\r\n//     };\r\n//     create_post = () => {\r\n//         this.props.store.dispatch(addPostActionCreator());\r\n//     };\r\n//\r\n//     render() {\r\n//         return (\r\n//             <Posts updateNewPostText={this.onPostChange}\r\n//                    addPost={this.create_post}\r\n//                    posts={this.state.profile.posts_from_server}\r\n//                    newPostText={this.state.profile.newPostText}\r\n//             />\r\n//         )\r\n//     }\r\n// }\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n      posts: state.profile.posts_from_server\r\n  }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        create_post: (newPost) => {\r\n            dispatch(addPostActionCreator(newPost))\r\n        }\r\n    }\r\n};\r\nconst  PostsContainer = connect (mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer","import React, {Component} from \"react\";\r\nimport Profile_user_info from \"./Profile_user_info/Profile_user_info\";\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\n\r\nclass Profile extends Component {\r\n\r\n    render() {\r\n        // if (!this.props.profile) {\r\n        //     return <Preloader/>\r\n        // }\r\n        return (\r\n            <React.Fragment>\r\n                <Profile_user_info profile={this.props.profile} userStatus={this.props.userStatus} updateUserStatus={this.props.updateUserStatus}/>\r\n                <PostsContainer store={this.props.store}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Profile;","import React, {Component} from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getUserStatus, updateUserStatus} from \"../../Redux/Reducers/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} userStatus={this.props.userStatus} updateUserStatus={this.props.updateUserStatus}/>\r\n        );\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profile.profile,\r\n    userStatus: state.profile.userStatus,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\n// let withUrlDataNewContainerComponent = withRouter (authRedirect) //return new component with router\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getUserStatus, updateUserStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}