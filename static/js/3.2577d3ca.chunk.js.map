{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/User/User.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/User/User.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","User","path","id","className","s","user","name","Message","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","Dialogs","users","map","messages","dialogs","values","onClickMessage","newMessageBody","compose","users_from_server","messages_from_server","dispatch","AddMessageActionCreator"],"mappings":"oNAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAG,eAHT,GACXC,IAAML,WAOtC,OAD4BM,YAAQX,EAARW,CAAoCL,K,oBCdpEM,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,KAAO,wB,oBCAxDD,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,KAAO,qB,oBCArDD,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,KAAO,wB,gJCiBzCC,E,2MAZXC,KAAO,YAAc,EAAKP,MAAMQ,G,sEAEzBR,GACH,OACI,yBAAKS,UAAWC,IAAEC,MACd,kBAAC,IAAD,CAASV,GAAIF,KAAKQ,MAAOR,KAAKC,MAAMY,W,GAPjCf,a,kBCWJgB,E,+KAXJb,GACH,OACI,yBAAKS,UAAWC,IAAEI,SACbf,KAAKC,MAAMc,a,GAJNjB,a,yCCwChBkB,EAAeC,YAAiB,KAUhCC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EATL,SAAClB,GACpB,OACI,0BAAMoB,SAAUpB,EAAMqB,cACd,kBAACC,EAAA,EAAD,CAAOC,YAAY,qBAAqBX,KAAK,iBAAiBY,UAAWC,IAAUC,SAAU,CAACC,IAAUZ,KACxG,4CAODa,EA7CC,SAAC5B,GAWb,IAGI6B,EAAQ7B,EAAM6B,MAAMC,KAAI,SAAAnB,GAAI,OAAI,kBAAC,EAAD,CAAMC,KAAMD,EAAKC,KAAMJ,GAAIG,EAAKH,QAChEuB,EAAW/B,EAAM+B,SAASD,KAAI,SAAAhB,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,aACvE,OAAmB,IAAfd,EAAML,KACE,kBAAC,IAAD,CAAUM,GAAI,WAGtB,6BACI,yBAAKQ,UAAWC,IAAEsB,SACd,yBAAKvB,UAAWC,IAAEmB,OACbA,GAEL,yBAAKpB,UAAWC,IAAEqB,UACbA,IAGT,kBAACd,EAAD,CAAqBG,SAlBT,SAACa,GACjBjC,EAAMkC,eAAeD,EAAOE,qB,iCC2BrBC,sBACXjC,aArBkB,SAACV,GACnB,MAAO,CACHoC,MAAOpC,EAAMuC,QAAQK,kBACrBN,SAAUtC,EAAMuC,QAAQM,qBAExB5C,OAAQD,EAAME,KAAKD,WAIF,SAAC6C,GACtB,MAAO,CAIHL,eAAgB,SAACC,GACbI,EAASC,YAAwBL,SAOzCvC,IAFWwC,CAGTR","file":"static/js/3.2577d3ca.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirect = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirect\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Dialogs_users__1Ozxe\",\"user\":\"Dialogs_user__1WNNF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"User_users__crLcn\",\"user\":\"User_user__v_FQm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Message_users__32ejn\",\"user\":\"Message_user__2cITb\"};","import React, {Component} from \"react\";\r\nimport s from './User.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass User extends Component {\r\n\r\n    path = '/dialogs/' + this.props.id;\r\n\r\n    render(props) {\r\n        return (\r\n            <div className={s.user}>\r\n                <NavLink to={this.path}>{this.props.name}</NavLink>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default User;","import React, {Component} from \"react\";\r\nimport s from './Message.module.css';\r\n\r\nclass Message extends Component {\r\n    render(props) {\r\n        return (\r\n            <div className={s.message}>\r\n                {this.props.message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport User from \"./User/User\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../utilities/FormsControl/FormsControl\";\r\nimport {maxLengthCreator, required} from \"../../utilities/validators/validators\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    // onChangeMessage = (event) => {\r\n    //     let newMessageBody = event.target.value;\r\n    //     this.props.onChangeMessageBody(newMessageBody)\r\n    //     console.log(this.props)\r\n    // };\r\n    // onClickMessage = () => {\r\n    //     this.props.onClickMessage()\r\n    // };\r\n\r\n    let addNewMessage = (values) => {\r\n        props.onClickMessage(values.newMessageBody)\r\n    }\r\n    let users = props.users.map(user => <User name={user.name} id={user.id}/>);\r\n    let messages = props.messages.map(message => <Message message={message.message}/>);\r\n    if (props.auth === false) {\r\n        return (<Redirect to={'/login'}/>)\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.dialogs}>\r\n                <div className={s.users}>\r\n                    {users}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {messages}\r\n                </div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\nconst maxLength100 = maxLengthCreator(100)\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n                <Field placeholder=\"Enter your message\" name=\"newMessageBody\" component={Textarea} validate={[required, maxLength100]} />\r\n                <button>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;","// import React, {Component} from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AddMessageActionCreator} from \"../../Redux/Reducers/dialigs-reducer\";\r\n\r\n// class DialogsContainer extends Component {\r\n//     state = this.props.store.getState().dialogs;\r\n//\r\n//     ChangeMessage = (event) => {\r\n//         let action = newMessageBodyActionCreator(event);\r\n//         this.props.store.dispatch(action);\r\n//     };\r\n//     AddMessage = () => {\r\n//         this.props.store.dispatch(AddMessageActionCreator())\r\n//     };\r\n//     render() {\r\n//         return (\r\n//           <Dialogs onChangeMessageBody={this.ChangeMessage}\r\n//                    onClickMessage={this.AddMessage}\r\n//                    users={this.state.users_from_server}\r\n//                    messages={this.state.messages_from_server}\r\n//\r\n//           />\r\n//         )\r\n//     }\r\n// }\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.dialogs.users_from_server,\r\n        messages: state.dialogs.messages_from_server,\r\n        // newMessageBodyState: state.dialogs.newMessageBodyState,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // onChangeMessageBody: (newMessageBody) => {\r\n        //     dispatch(newMessageBodyActionCreator(newMessageBody));\r\n        // },\r\n        onClickMessage: (newMessageBody) => {\r\n            dispatch(AddMessageActionCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n    )(Dialogs);"],"sourceRoot":""}